[include printer_macros.cfg]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_37FFD8054252353427591957-if00

[mcu host]
serial: /tmp/klipper_host_mcu

[respond]
default_type: command

[save_variables]
filename: ~/klipper_config/variables.cfg

[virtual_sdcard]
path: /home/pi/gcode_files

[pause_resume]

[display_status]

# [adxl345]
# cs_pin: host:None

# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#     100,100,100  # an example

[respond]
default_type: command

[gcode_arcs]
resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[idle_timeout]
gcode:
	G91                          	 																	                  ; relative positioning
	G1 Z5 F18000.0                      																              ; move up 5mm
	G90                                 																              ; absolute positioning
	G1 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F18000.0 ; park nozzle at rear
	OFF																									                              ; turn everything off
# 2 hrs to avoid timeout during chamber soak
timeout: 7200

[printer]
kinematics: corexz
max_velocity: 200
max_accel: 2400  # should not exceed the estimated max_accel for X and Y axes
max_z_velocity: 50
max_z_accel: 500
square_corner_velocity: 4.0
max_accel_to_decel: 1200

[input_shaper]
shaper_freq_x: 55
shaper_type_x: mzv
shaper_freq_y: 56
shaper_type_y: mzv

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
rotation_distance: 39.87 #40
microsteps: 16
full_steps_per_rotation: 400
endstop_pin: ^PC0
position_endstop: 250
position_min: 0
position_max: 250
homing_speed: 70
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.65
hold_current: 0.35
interpolate: True
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
rotation_distance: 39.734 #40
microsteps: 16
full_steps_per_rotation: 400
endstop_pin: ^PC1
position_endstop: 250
position_min: 0
position_max: 250
homing_speed: 70
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.65
hold_current: 0.35
interpolate: True
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 400
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.0
position_max: 250
homing_speed: 40
position_min: -3.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.65
hold_current: 0.35
interpolate: True
stealthchop_threshold: 999999

[homing_override]
axes: z
set_position_z: 0
gcode:
    G90
    G0 Z5 F500
    G28 X0 Y0
    G0 X125 Y100 F9000
    G28 Z0
    G0 Z5 F500

[bed_mesh]
speed: 150
horizontal_move_z: 5
mesh_min: 25,35.0
mesh_max: 225.0,220
#relative_reference_index: 40
probe_count: 6,6
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0
# faulty_region_1_min: 30.2, 3.7
# faulty_region_1_max: 55.2, 13.7
# faulty_region_2_min: 62.6, 3.7
# faulty_region_2_max: 87.8, 13.7
# faulty_region_3_min: 128.9, 7.5
# faulty_region_3_max: 146.9, 37.5
# faulty_region_4_min: 199.2, 24.7
# faulty_region_4_max: 229.2, 42.7
# faulty_region_5_min: 25.0, 112.7
# faulty_region_5_max: 43.0, 142.7
# faulty_region_6_min: 63.0, 118.2
# faulty_region_6_max: 93.0, 136.2
# faulty_region_7_min: 160.7, 118.2
# faulty_region_7_max: 190.7, 136.2
# faulty_region_8_min: 208.8, 112.7
# faulty_region_8_max: 226.8, 142.7
# faulty_region_9_min: 118.2, 65.6
# faulty_region_9_max: 136.2, 95.6
# faulty_region_10_min: 118.2, 158.4
# faulty_region_10_max: 136.2, 188.4
# faulty_region_11_min: 104.9, 212.2
# faulty_region_11_max: 122.9, 242.2
# faulty_region_12_min: 184.8, 212.0
# faulty_region_12_max: 214.8, 230.0
# faulty_region_13_min: 178, 43
# faulty_region_13_max: 198, 63


[probe]
pin: ^!PC2
x_offset: 0.0
y_offset: 25.0
#z_offset: 1.85
speed: 40
samples: 3
samples_result: median
#sample_retract_dist: 3.0
samples_tolerance: 0.1
samples_tolerance_retries: 3

[homing_heaters]
steppers:
    stepper_z
#   A comma separated list of steppers that should cause heaters to be
#   disabled. The default is to disable heaters for any homing/probing
#   move.
#   Typical example: stepper_z
heaters:
    heater_bed
#   A comma separated list of heaters to disable during homing/probing
#   moves. The default is to disable all heaters.
#   Typical example: extruder, heater_bed

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD2
microsteps: 32
rotation_distance: 22.6789511
gear_ratio: 50:17
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
pressure_advance: 0.05
pressure_advance_smooth_time: 0.040
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA0
#control = pid
#pid_kp = 18.973
#pid_ki = 0.771
#pid_kd = 116.683
min_temp: 0
max_temp: 300

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.65
hold_current: 0.30
interpolate: True

[controller_fan controller_fan]
pin: PA1
max_power: 0.5
kick_start_time: 0.200
heater: heater_bed

[heater_bed]
heater_pin: PC9
#sensor_type: NTC 100K beta 3950
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC3
#control = pid
#pid_kp = 60.695
#pid_ki = 1.073
#pid_kd = 858.069
min_temp: 0
max_temp: 130


[fan]
pin: PC6
max_power: 1.0
kick_start_time: 0.5
off_below: 0.1
cycle_time: 0.01

# thermally controlled hotend fan
[heater_fan hotend_fan]
pin: PC7
max_power: 1.0
fan_speed: 1.0
kick_start_time: 0.100
heater: extruder
heater_temp: 50.0

[static_digital_output usb_pullup_enable]
pins: !PA14

[controller_fan controller_fan]
pin: host:gpio23
max_power: 0.60
kick_start_time: 0.500
heater: heater_bed

[temperature_sensor RPi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100
gcode_id: D

[temperature_sensor MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100
gcode_id: E

[output_pin lights]
pin: host:gpio26
pwm: True
#hardware_pwm: True
cycle_time: 0.10
value: 0.0
shutdown_value: 1.0

[display]
#    mini12864 LCD Display
lcd_type: uc1701
cs_pin: PB8
a0_pin: PB15
rst_pin: PB9
encoder_pins: ^PA10,^PA9
click_pin: ^!PB5
contrast: 63
spi_software_sclk_pin: PA5
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
display_group: __voron_display

[neopixel fysetc_mini12864]
#    To control Neopixel RGB in mini12864 display
pin: PA15
chain_count: 3
initial_RED: 0.0
initial_GREEN: 1.0
initial_BLUE: 0.0
color_order: RGB

[display_glyph voron]
data:
   .......**.......
   .....******.....
   ....********....
   ..************..
   .*****..**..***.
   .****..**..****.
   .***..**..*****.
   .**..**..******.
   .******..**..**.
   .*****..**..***.
   .****..**..****.
   .***..**..*****.
   ..************..
   ....********....
   .....******.....
   .......**.......

[display_template _vheater_temperature]
param_heater_name: "extruder"
text:
  {% if param_heater_name in printer %}
    {% set heater = printer[param_heater_name] %}
    # Show glyph
    {% if param_heater_name == "heater_bed" %}
      {% if heater.target %}
        {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
        ~bed_heat{frame}~
      {% else %}
        ~bed~
      {% endif %}
    {% else %}
      ~extruder~
    {% endif %}
    # Show temperature
    { "%3.0f" % (heater.temperature,) }
    # Optionally show target
    {% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
      ~right_arrow~
      { "%0.0f" % (heater.target,) }
    {% endif %}
    ~degrees~
  {% endif %}

[display_data __voron_display extruder]
position: 0, 0
text: { render("_vheater_temperature", param_heater_name="extruder") }

[display_data __voron_display fan]
position: 0, 10
text:
  {% if 'fan' in printer %}
    {% set speed = printer.fan.speed %}
    {% if speed %}
      {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
      ~fan{frame}~
    {% else %}
      ~fan1~
    {% endif %}
    { "{:>4.0%}".format(speed) }
  {% endif %}

[display_data __voron_display bed]
position: 1, 0
text: { render("_vheater_temperature", param_heater_name="heater_bed") }

[display_data __voron_display feed_rate]
position: 1, 10
text:
  {% set frate = printer.gcode_move.extrude_factor %}
  ~feedrate~
  { "%03d%%" % (frate * 100) }

[display_data __voron_display progress_text]
#position: 1, 10
position: 2, 0
text:
  {% set progress = printer.display_status.progress %}
  { "{:^10.0%}".format(progress) }
  
[display_data __voron_display progress_text2]
#position: 1, 10
position: 2, 0
text:
  {% set progress = printer.display_status.progress %}
#  { draw_progress_bar(1, 10, 6, progress) }
  { draw_progress_bar(2, 0, 10, progress) }

[display_data __voron_display printing_time]
position: 2, 11
text:
  {% set ptime = printer.idle_timeout.printing_time %}
  { "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }

#########################################################
# This section defines the actual chamber temp. field,
# replace 'temperature_sensor chamber' as necessary
#########################################################
#[display_data __voron_display chamber]
#position: 2, 0
#text:
#  {% set chamber = printer['temperature_sensor chamber'] %}
#	~chamber~
#	{ "%3.0f" % (chamber.temperature,) }
#	~degrees~   

[display_data __voron_display print_status]
position: 3, 0
text: 
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    {% set pos = printer.toolhead.position %}
    { "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
  {% else %}
  ~voron~
    { " VS.087 " }
  {% endif %}
    
[menu __main __octoprint]
type: list
enable: False
name: OctoPrint

[menu __main __actions]
type: list
name: Actions
index: 0

[menu __main __actions __pause]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Pause printing
gcode:
  PAUSE

[menu __main __actions __resume]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Resume printing
gcode:
  RESUME

[menu __main __actions __abort]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Abort printing
gcode:
  CANCEL_PRINT

[menu __main __options]
type: list
name: Options
index: 1

[menu __main __options __ledON]
type: command
enable: True
name: LED Lights ON
gcode:
  LIGHTS_ON

[menu __main __options __ledOFF]
type: command
enable: True
name: LED Lights OFF
gcode:
  LIGHTS_OFF

[menu __main __options __sheetPrusa]
type: command
enable: True
name: Prusa Sheet
gcode:
  PRUSA_SHEET

[menu __main __options __sheetUltistik]
type: command
enable: True
name: Ultistik Sheet
gcode:
  ULTISTIK_SHEET

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 43.074
#*# pid_ki = 0.616
#*# pid_kd = 752.725
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.417
#*# pid_ki = 1.424
#*# pid_kd = 113.425
#*#
#*# [probe]
#*# z_offset = 2.219
